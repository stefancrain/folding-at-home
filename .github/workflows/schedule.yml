---
name: Daily schedule
on:
  schedule:
    - cron: "* */6 * * *"

jobs:
  fetch-versions:
    name: "Fetch Beta and Stable releases"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - main
          - beta
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: "${{ matrix.branch }}"
          token: "${{ secrets.PAT }}"

      - name: Fetch all release version
        if: matrix.branch == 'main'
        run: |
          # public
          MAJOR_VER=$( \
            curl https://download.foldingathome.org/releases/public/release/fahclient/debian-stable-64bit/ | \
            grep "href" | \
            sed -e "s#/<.*##g" -e "s#.*/\">##g" | \
            grep -o "^v.*" | \
            sort --version-sort | \
            tail -n1 \
          )
          curl https://download.foldingathome.org/releases/public/release/fahclient/debian-stable-64bit/${MAJOR_VER}/ | \
          grep deb | \
          sed  -e "s#deb.*#deb#g" -e "s#.*fah#fah#g" -e "s#.*latest.*##g" | \
          grep -o "^fah.*\.deb$" | \
          sort --version-sort | \
          tail -n1 | \
          sed -e "s#fahclient_##g" -e "s#_amd64.deb##g" > build/fah-public.version
          cat build/.fah-public.version
          # beta version
          MAJOR_VER=$( \
            curl https://download.foldingathome.org/releases/beta/release/fahclient/debian-stable-64bit/ | \
            grep "href" | \
            sed -e "s#/<.*##g" -e "s#.*/\">##g" | \
            grep -o "^v.*" | \
            sort --version-sort | \
            tail -n1 \
          )
          curl https://download.foldingathome.org/releases/beta/release/fahclient/debian-stable-64bit/${MAJOR_VER}/ | \
          grep deb | \
          sed  -e "s#deb.*#deb#g" -e "s#.*fah#fah#g" -e "s#.*latest.*##g" | \
          grep -o "^fah.*\.deb$" | \
          sort --version-sort | \
          tail -n1 | \
          sed -e "s#fahclient_##g" -e "s#_amd64.deb##g" > build/fah-beta.version
          cat build/.fah-beta.version

      # - name: Update Dockerfile version
      #   run: |
      #     VERSION=$(cat build/fah-public.version)
      #     sed -i '' "s/ VERSION=.*/ VERSION=${VERSION}/g" build/Dockerfile

      - name: Commit release version update
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --global user.name 'Stefan Crain'
            git config --global user.email 'stefancrain@users.noreply.github.com'
            git commit --all --signoff --message="Adding new release version ${{ env.VERSION }}" || exit 0
            git tag --annotate ${{ env.VERSION }} --message="Automatic bump to ${{ env.VERSION }}"
            git push --atomic origin "${{ matrix.branch }}" ${{ env.VERSION }}
          fi
        env:
          VERSION: $(cat build/fah-public.version)
